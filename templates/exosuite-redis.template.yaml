apiVersion: v1
kind: Service
metadata:
  namespace: <ENV>
  name: <CONTAINER>
  labels:
    app: <CONTAINER>
spec:
  clusterIP: None
  ports:
    - name: redis
      protocol: TCP
      port: 6379
  selector:
    run: <CONTAINER>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <ENV>
  name: <CONTAINER>
spec:
  selector:
    matchLabels:
      run: <CONTAINER>
  replicas: 1
  template:
    metadata:
      labels:
        run: <CONTAINER>
    spec:
      volumes:
        - name: <CONTAINER>-storage
          persistentVolumeClaim:
            claimName: <CONTAINER>-claim
      containers:
        - name: <CONTAINER>
          image: redis:alpine
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: "500m"
              memory: "500Mi"
            limits:
              cpu: "1000m"
              memory: "1000Mi"
          command: ["sh"]
          args: ["-c", "docker-entrypoint.sh --appendonly yes"]
          volumeMounts:
            - mountPath: "/data"
              name: <CONTAINER>-storage
      nodeSelector:
        type: <NODE>
---
kind: PersistentVolume
apiVersion: v1
metadata:
  namespace: <ENV>
  name: <CONTAINER>-volume
  labels:
    type: local
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - mail.exosuite.fr
  capacity:
    storage: <STORAGE>
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  storageClassName: local-storage
  hostPath:
    path: "/var/www/<CONTAINER>"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: <ENV>
  name: <CONTAINER>-claim
spec:
  resources:
    requests:
      storage: <STORAGE>
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce